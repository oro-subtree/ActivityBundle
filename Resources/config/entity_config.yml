oro_entity_config:
    activity:
        entity:
            items:
                # the list of activities that can be assigned to the entity
                activities: # array of class names
                    options:
                        require_schema_update: true
                        priority:           250
                    form:
                        type:               oro_entity_extend_multiple_association_choice
                        options:
                            block:          associations
                            required:       false
                            label:          oro.activity.activities
                            association_class: activity

                # this attribute can be used to prohibit changing activity state (no matter whether
                # it is enabled or not) for the entity
                # if TRUE than no one activity state can be changed
                # also it can be an array with the list of class names of activities which state cannot be changed
                immutable: # boolean or array
                    options:
                        auditable:          false

                # the route name for the controller that can be used to render the list of this type of activities
                # this controller must have $entityClass and $entityId parameters are used to pass the target entity
                # this attribute must be defined for each activity entity (an entity included in 'activity' group,
                # see 'grouping' scope)
                route: # string
                    options:
                        auditable:          false

                # the ACL ancestor that is used to check whether this type of activity is available
                # in the current security context
                acl: # string
                    options:
                        auditable:          false

                # this attribute can be used to change the order of this type of activity on UI
                priority: # integer
                    options:
                        auditable:          false

                # the widget name of the activity action that is used for render a button
                # this widget should be defined in placeholders.yml
                # this attribute can be defined for activity entity
                # please note that an activity should provide both action_link_widget and action_link_widget
                action_button_widget: # string
                    options:
                        auditable:          false

                # the widget name of the activity action that is used for render a link in dropdown menu
                # this widget should be defined in placeholders.yml
                # this attribute can be defined for activity entity
                # please note that an activity should provide both action_link_widget and action_link_widget
                action_link_widget: # string
                    options:
                        auditable:          false

                # the name of a group in which the activity action is included.
                # this attribute can be defined for activity entity
                # if this attribute is not specified the activity action is rendered standalone button
                # using action_button_widget;
                # otherwise, it is grouped with other activity actions included in the same group
                # and action_link_widget is used to render an action
                # also please note that a desision how an action should be rendered also depends on
                # a number of actions in a group, for example if a group has only one action it
                # will be rendered as standalone button; if there are a lot of ungroupped actions
                # they can be groupped together as well
                action_group: # string
                    options:
                        auditable:          false
